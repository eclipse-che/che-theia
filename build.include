#!/bin/bash
# Copyright (c) 2019 Red Hat, Inc.
# This program and the accompanying materials are made
# available under the terms of the Eclipse Public License 2.0
# which is available at https://www.eclipse.org/legal/epl-2.0/
#
# SPDX-License-Identifier: EPL-2.0
#

set -e
set -u

IMAGE_TAG="next"
THEIA_VERSION="master"
THEIA_BRANCH="master"
THEIA_COMMIT_SHA="d3b8df68b92de5651b98f1f2a16adfb11ba5350f"
THEIA_GIT_REFS="refs\\/heads\\/master"
THEIA_DOCKER_IMAGE_VERSION=

prepare_yarn_root_args() {
    IFS=',' read -r -a YARN_ARGS_ARRAY <<< "$@"
    for i in ${YARN_ARGS_ARRAY[@]+"${YARN_ARGS_ARRAY[@]}"}; do
    YARN_OPTS+="$i "
    done
}

parse() {
  PUBLISH_IMAGES=false
  YARN_OPTS=""
  FILTERED_ARGS=""
  while [ $# -gt 0 ]; do
    case $1 in
      --pr)
      # For compatibility issue
      shift ;;
      --push)
        PUBLISH_IMAGES=true
      shift ;;
      --root-yarn-opts*:*)
        ROOT_YARN_CSV="${1#*:}"
        prepare_yarn_root_args $ROOT_YARN_CSV
        shift ;;
      *)
        FILTERED_ARGS="${FILTERED_ARGS} $1"
      shift;;
    esac
  done
}

is_publish_images() {
  if [[ "${PUBLISH_IMAGES}" == "true" ]]; then
    return 0
  else
    return 1
  fi
}

# KEEP RIGHT ORDER!!!
DOCKER_FILES_LOCATIONS=(
  dockerfiles/theia-dev
  dockerfiles/theia
  dockerfiles/theia-endpoint-runtime-binary
)

PUBLISH_IMAGES_LIST=(
  eclipse/che-theia-dev
  eclipse/che-theia
  eclipse/che-theia-endpoint-runtime-binary
)

getImages() {
  echo "${DOCKER_FILES_LOCATIONS[@]}"
}

buildImages() {
  IFS=" " read -r -a IMG_LIST <<< "$(getImages)"
  for image_dir in "${IMG_LIST[@]}"
  do
    GITHUB_TOKEN_ARG="GITHUB_TOKEN=${GITHUB_TOKEN:-}"
    echo "Building image in ${image_dir}"
     if [ "$image_dir" == "dockerfiles/theia" ]; then
       bash $(pwd)/$image_dir/build.sh --build-args:${GITHUB_TOKEN_ARG},THEIA_VERSION=${THEIA_VERSION},THEIA_COMMIT_SHA=${THEIA_COMMIT_SHA} --tag:${IMAGE_TAG} --branch:${THEIA_BRANCH} --git-ref:${THEIA_GIT_REFS} ${FILTERED_ARGS}
     elif [ "$image_dir" == "dockerfiles/theia-dev" ]; then
       bash $(pwd)/$image_dir/build.sh --build-arg:${GITHUB_TOKEN_ARG} --tag:${IMAGE_TAG} ${FILTERED_ARGS}
     else
       bash $(pwd)/$image_dir/build.sh --build-arg:${GITHUB_TOKEN_ARG} --tag:${IMAGE_TAG} ${FILTERED_ARGS}
     fi
     if [ $? -ne 0 ]; then
       echo "ERROR:"
       echo "build of '$image_dir' image has failed!"
       exit 1
     fi
  done
}

publishImages() {
  echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
  for image in "${PUBLISH_IMAGES_LIST[@]}"
  do
    echo "Publishing image ${image}..."
    if [[ -n "${THEIA_DOCKER_IMAGE_VERSION}" ]]; then
      docker tag "${image}:${IMAGE_TAG}" "${image}:${THEIA_DOCKER_IMAGE_VERSION}"
      echo y | docker push "${image}:${IMAGE_TAG}"
      echo y | docker push "${image}:${THEIA_DOCKER_IMAGE_VERSION}"
    else
      echo y | docker push "${image}:${IMAGE_TAG}"
    fi
  done
}
