---
apiVersion: 1.0.0
metadata:
  generateName: golang-
projects:
  - name: example
    source:
      type: git
      location: https://github.com/golang/example.git
    clonePath: src/github.com/golang/example/
  - name: golang-echo-realworld-example-app
    source:
      type: git
      location: https://github.com/xesina/golang-echo-realworld-example-app.git
    clonePath: src/github.com/xesina/golang-echo-realworld-example-app

components:
  - type: chePlugin
    id: golang/go/latest
    alias: go-plugin
    memoryLimit: 512Mi
    env:
      - value: 'off'
        name: GO111MODULE
    preferences:
      go.lintTool: 'golangci-lint'
      go.lintFlags: '--fast'
      go.useLanguageServer: true
  - type: dockerimage
    # this version is used in the plugin
    image: quay.io/eclipse/che-golang-1.14:nightly
    alias: go-cli
    env:
      - name: GOPATH
        # replicate the GOPATH from the plugin
        value: $(CHE_PROJECTS_ROOT)
      - name: GOCACHE
        # replicate the GOCACHE from the plugin, even though the cache is not shared
        # between the two
        value: /tmp/.cache
    endpoints:
      - name: '8080-tcp'
        port: 8080
    memoryLimit: 2Gi
    mountSources: true
commands:
  - name: '1.1 Run outyet'
    actions:
      - type: exec
        component: go-cli
        command: go get -d && go run main.go
        workdir: ${CHE_PROJECTS_ROOT}/src/github.com/golang/example/outyet
  - name: '1.2 Stop outyet'
    actions:
      - type: exec
        component: go-cli
        command: kill $(pidof go)
  - name: '1.3 Test outyet'
    actions:
      - type: exec
        component: go-cli
        command: go test
        workdir: ${CHE_PROJECTS_ROOT}/src/github.com/golang/example/outyet
  - name: '2.1 xenisa :: install dependencies'
    actions:
      - type: exec
        component: go-cli
        command: go mod download
        workdir: ${GOPATH}/src/github.com/xesina/golang-echo-realworld-example-app
  - name: '2.2 xenisa :: run'
    actions:
      - type: exec
        component: go-cli
        command: go run main.go
        workdir: ${GOPATH}/src/github.com/xesina/golang-echo-realworld-example-app
  - name: '2.3 xenisa :: build'
    actions:
      - type: exec
        component: go-cli
        command: go build
        workdir: ${GOPATH}/src/github.com/xesina/golang-echo-realworld-example-app
  - name: '2.4 xenisa :: test'
    actions:
      - type: exec
        component: go-cli
        command: go test ./...
        workdir: ${GOPATH}/src/github.com/xesina/golang-echo-realworld-example-app
  - name: 'Run current file'
    actions:
      - type: exec
        component: go-cli
        command: go get -d && go run ${file}
        workdir: ${fileDirname}
  - name: 'Debug current file'
    actions:
      - type: vscode-launch
        referenceContent: |
          {
            "version": "0.2.0",
            "configurations": [
              {
                "name": "Debug current file",
                "type": "go",
                "request": "launch",
                "mode": "auto",
                "program": "${fileDirname}"
              }
            ]
          }
