#
# Copyright (c) 2021 Red Hat, Inc.
# This program and the accompanying materials are made
# available under the terms of the Eclipse Public License 2.0
# which is available at https://www.eclipse.org/legal/epl-2.0/
#
# SPDX-License-Identifier: EPL-2.0
#

name: Release Che Theia

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'The version that is going to be released. Should be in format 7.y.z'
        required: true
        default: ''
      forceRecreateTags:
        description: If true, tags will be recreated. Use with caution
        required: false
        default: 'false'
      pushToNpmJs:
        description: If true, will push packages to npmjs
        required: false
        default: 'true'

jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
      name: Checkout che-theia source code
      with:
        fetch-depth: 0
    - name: Check existing tags
      run: |
        RECREATE_TAGS=${{ github.event.inputs.forceRecreateTags }}
        git ls-remote --exit-code origin refs/tags/${{ github.event.inputs.version}}
        TAG_EXISTS=$?
        if [[ $TAG_EXISTS -eq 0 ]]; then
          if [[ $RECREATE_TAGS == "true" ]]; then
            echo "[INFO] Recreating tags for ${{ github.event.inputs.version}} version"
            git push origin :${{ github.event.inputs.version}}
          else
            echo "[ERROR] Cannot proceed with release - tag already exists"
          fi
        fi
    - uses: actions/setup-node@v1
      name: Configuring nodejs 12.x version
      with:
        node-version: '12.x'
    - name: Login to docker.io
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}
        registry: docker.io
    - name: Login to quay.io
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.QUAY_USERNAME }}
        password: ${{ secrets.QUAY_PASSWORD }}
        registry: quay.io
    - name: Prepare release
      run: |
        ./make-release.sh --version ${{ github.event.inputs.version }}
    - name: Build and publish images
      run: |
        docker image prune -a -f
        ./build.sh --root-yarn-opts:--ignore-scripts --dockerfile:Dockerfile.alpine --push
      env:
        CDN_PREFIX: https://static.developers.redhat.com/che/theia_artifacts/
        MONACO_CDN_PREFIX: https://cdn.jsdelivr.net/npm/
    - name: Set-up npmjs auth token
      if: github.event.inputs.pushToNpmJs == true 
      run: printf "//registry.npmjs.org/:_authToken=${{ secrets.CHE_NPM_AUTH_TOKEN }}\n" >> ~/.npmrc
    - name: Publish packages to npmjs
      if: github.event.inputs.pushToNpmJs == true 
      run: yarn publish:next
